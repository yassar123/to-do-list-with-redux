{"version":3,"sources":["redux/actions.js","components/TodoInput.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducers.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","name","setName","dispatch","useDispatch","style","margin","width","padding","className","color","fontFamily","value","placeholder","onChange","e","target","type","onClick","todo","id","uuid","payload","TodoItem","editable","setEditable","updateTodo","todoId","TodoList","todos","useSelector","state","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","push","filter","index","i","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1467badf.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport function addTodo(todo) {\r\n    return {\r\n        type:ADD_TODO,\r\n        payload: todo,\r\n    }\r\n}\r\n\r\nexport function deleteTodo(todoId) {\r\n    return {\r\n        type:DELETE_TODO,\r\n        payload: todoId,\r\n    }\r\n}\r\n\r\n\r\nexport function updateTodo(todo) {\r\n    return {\r\n        type:UPDATE_TODO,\r\n        payload: todo,\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { addTodo } from '../redux/actions';\r\nimport { v1 as uuid } from 'uuid';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction TodoInput() {\r\n    let [name, setName] = useState();\r\n    let dispatch = useDispatch();\r\n    return (\r\n        <div style={{margin:\"0 auto\",width:\"200px\",padding:\"10px\"}}>\r\n            <div className=\"row m-2\" >\r\n                <h1 style={{color:\"grey\",fontFamily:\"Arial, Helvetica, sans-serif\"}}>TO-DO-LIST</h1>\r\n                <input\r\n                    value={name}\r\n                    placeholder=\"Enter\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    type=\"text\" className=\"col form-control\" />\r\n                    \r\n                <button\r\n\r\n                    onClick={() => {\r\n                        if(name==''){\r\n                            return;\r\n                        }\r\n                        dispatch(addTodo({\r\n                            id: uuid(),\r\n                            name: name\r\n                        }));\r\n                        setName('');\r\n                    }}\r\n                    className=\"btn btn-primary mx-2\">Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoInput","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTodo, updateTodo } from '../redux/actions';\r\n\r\nfunction TodoItem({ todo }) {\r\n    const [editable, setEditable] = useState(false)\r\n    const [name, setName] = useState(todo.name)\r\n    let dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row mx-2 align-items-center\" style={{ margin: \"0 auto\", width: \"220px\", padding: \"10px\" }}>\r\n                {/* <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div> */}\r\n                <div className=\"col\">\r\n                    {editable ?\r\n                        <input type=\"text\" className=\"form-control\"\r\n                            value={name}\r\n                            onChange={(e) => {\r\n                                setName(e.target.value);\r\n                            }}\r\n\r\n                        />\r\n                        :\r\n                        <h4>{todo.name}</h4>}\r\n                </div>\r\n                <button className=\"btn btn-primary m-2\"\r\n                    onClick={() => {\r\n                        dispatch(updateTodo({\r\n                            ...todo,\r\n                            name: name\r\n                        }))\r\n                        if (editable) {\r\n                            setName(todo.name);\r\n                        }\r\n                        setEditable(!editable);\r\n\r\n\r\n                    }}\r\n                >{editable ? \"Update\" : \"Edit\"}</button>\r\n                <button className=\"btn btn-danger m-2\"\r\n                    onClick={() => dispatch(deleteTodo(todo.id))}\r\n                >Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction TodoList() {\r\n    let todos = useSelector(state=>state);\r\n\r\n    return (\r\n        <div className=\"my-4\">\r\n            {todos.map((todo)=>   {\r\n                return <TodoItem key={todos.id} todo={todo}/>;\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import './App.css';\nimport TodoInput from './components/TodoInput';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <TodoInput/>\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos = [\r\n    // {\r\n    //     id:1,\r\n    //     name: \"One\",\r\n    // },\r\n    // {\r\n    //     id:2,\r\n    //     name: \"Two\",\r\n    // },\r\n    // {\r\n    //     id:3,\r\n    //     name: \"Three\",\r\n    // },\r\n]","import {createStore} from 'redux';\r\nimport {reducer} from './reducers';\r\n\r\nexport let store = createStore(reducer);","import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from './actions';\r\nimport { todos } from './states';\r\n\r\n\r\nexport let reducer = (state = todos, action) => {\r\n    let newTodos;\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            newTodos = [...state];\r\n            newTodos.push(action.payload);\r\n            return newTodos;\r\n        case DELETE_TODO:\r\n            newTodos = [...state];\r\n            newTodos = newTodos.filter(todo => todo.id != action.payload);\r\n            return newTodos;\r\n        case UPDATE_TODO:\r\n            newTodos = [...state];\r\n            let index = -1;\r\n            for (let i = 0; i < newTodos.length; i++) {\r\n                index++;\r\n                if (newTodos[i].id == action.payload.id) {\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if (index != -1) {\r\n                newTodos[index] = action.payload;\r\n                return newTodos;\r\n            }\r\n\r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}